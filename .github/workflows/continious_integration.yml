name: Build and Deploy EDC to Cluster
on:
#  pull_request:
#    types:
#      - opened
#      - reopened
#      - review_requested
  push:
    branches: ["develop"]
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  NAMESPACE: possible-x
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Docker "management" meta
        id: management-meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/management
          tags: |
            latest-${{github.ref_name }}
            ${{ github.sha }}
      - name: Build and push "management"
        id: build_and_push_management
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./edc-orchestrator/Dockerfile
          push: true
          tags: ${{ steps.management-meta.outputs.tags }}
          labels: ${{ steps.management-meta.outputs.labels }}

  deploy-consumer:
    runs-on: 'ubuntu-latest'
    needs: build-and-push-image
    steps:
      - name: 'Invoke Kubectl Consumer'
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: "set image deployment/edc-management-possible-x-edc-management -n edc-dev-consumer-management possible-x-edc-management=${{ env.REGISTRY }}/possible-x/management:${{ github.sha }}"
  deploy-provider:
    runs-on: 'ubuntu-latest'
    needs: build-and-push-image
    steps:
      - name: 'Invoke Kubectl Provider'
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: "set image deployment/edc-management-possible-x-edc-management -n edc-dev-consumer-management possible-x-edc-management=${{ env.REGISTRY }}/possible-x/management:${{ github.sha }}"